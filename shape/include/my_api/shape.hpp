#ifndef ILRD_HRD22_CIRCLE_HPP
#define ILRD_HRD22_CIRCLE_HPP


#include "utils.h"
#include "point.hpp"


namespace hrd22
{

class Shape
{
    public:
        explicit Shape(ilrd::Point center_); 
        //~Shape() NOEXCEPT; //Dtor autogenerated
        virtual Shape& Draw() =0; //pure virtual, should be implemented by all derived 
        virtual Shape& Move(ilrd::Point new_center_);
        virtual Shape& Rotate(double angle = 0.0);
        virtual Shape& Revolve(const Point& ilrd::pivot, double angle);


    private:
        ilrd::Point m_center; 

        Shape(const Shape& other_); // Copy Ctor do not implement
        Shape& operator=(const Shape& other_); // assignment operator do not implement
};



}
#endif // ILRD_HRD22_CIRCLE_HPP